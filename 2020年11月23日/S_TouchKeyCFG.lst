C51 COMPILER V9.00   S_TOUCHKEYCFG                                                         07/17/2021 13:56:29 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE S_TOUCHKEYCFG
OBJECT MODULE PLACED IN S_TouchKeyCFG.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE lib\S_TouchKeyCFG.C BROWSE DEBUG OBJECTEXTEND PRINT(.\S_TouchKeyCFG.lst) OB
                    -JECT(S_TouchKeyCFG.obj)

line level    source

   1          //*************************************************************************************************
   2          //  Copyright (c)       深圳市赛元微电子有限公司
   3          //      文件名称        :  S_TouchKeyCFG.c
   4          //      作者            : 
   5          //      模块功能        :  SC91F844触控键配置文件
   6          //      版本            :
   7          //      更改记录        :
   8          //      注意事项        :  用户需要配置的文件在S_TouchKeyCFG.h中
   9          //  库版本标记  : 
  10          //************************************************************************************************
  11          #include "lib\S_TouchKeyCFG.h"
  12          
  13          //*************************************************************************************
  14          //              844 寄存器定义
  15          //*************************************************************************************
  16          /*PSW*/
  17          sfr     TK_PSW      =   0xD0;   //程序状态字
  18          sbit    TK_CY           =       TK_PSW^7;       //进位  
  19          
  20          //===========================================================================
  21          //全局变量定义
  22          unsigned        char    xdata           SOCAPI_TouchKeyStatus;                                  //API接口状态：bit7-一轮扫描完成标志  1:完成    0：未完成
  23                                                                                                                                                      //                     bit6-通道触摸计数溢出标志 1:溢出      0:未溢出
  24          //===============================================================================
  25          //全局变量声明：该区域不可修改
  26          unsigned        int     xdata           RawData [SOCAPI_SET_TOUCHKEY_TOTAL];                    
  27          unsigned        int             xdata           BaseLine[SOCAPI_SET_TOUCHKEY_TOTAL];
  28          unsigned    int         xdata           FilterData[SOCAPI_SET_TOUCHKEY_TOTAL];                                                                                          
  29          unsigned        char    xdata           RestAreaCnt[SOCAPI_SET_TOUCHKEY_TOTAL];                         
  30          unsigned        char    xdata           TouchCnt[SOCAPI_SET_TOUCHKEY_TOTAL];                            
  31          unsigned        char    xdata           NoTouchCnt[SOCAPI_SET_TOUCHKEY_TOTAL];                          
  32          unsigned        char    xdata           CurrentChannel[SOCAPI_SET_TOUCHKEY_TOTAL];                                                   
  33          unsigned    char    xdata           LowFingerDataCnt[SOCAPI_SET_TOUCHKEY_TOTAL];
  34          unsigned        char    xdata           FloatAreaCnt[SOCAPI_SET_TOUCHKEY_TOTAL]; 
  35          unsigned        char    xdata           BaseLineAdjusttmp[SOCAPI_SET_TOUCHKEY_TOTAL];   
  36          int                 xdata           DifferAccum[SOCAPI_SET_TOUCHKEY_TOTAL]; 
  37          char                xdata               SetNoiseThreshold;
  38          unsigned        char    xdata           ConfirmTouchCnt;
  39          unsigned        char    xdata           MultipleDealTpye = 0; 
  40          
  41          //自定义变量
  42          unsigned        int     xdata       UpdateBaseLNum;                                             // 单键长按计数器
  43          unsigned        int     xdata       MultipleLNum;                                               // 多按键干扰计数
  44          
  45          //外部变量接口
  46          extern  unsigned        char    data            CurrentChannelMax;              //当前选中的keysensor的个数
  47          extern  bit  bMultiple; //多按键标志    
  48          extern  bit  GetIsNeedUpdateBaseline(void);
  49          extern  void SetNeedUpdateBaseline(void);
  50          extern  unsigned long int SensorKeyFlag(void);
  51          extern  void MultipleDeal(unsigned char CycleCnt);
  52          extern  void TouchKey_Service(void);
  53          
  54          /***************弹簧库独有***************/
C51 COMPILER V9.00   S_TOUCHKEYCFG                                                         07/17/2021 13:56:29 PAGE 2   

  55          #define         SOCAPI_SET_CS_FUNCTION                                          1               //0:表示不进行CS测试,1: 表示进行CS测试,默认0
  56          #define         SOCAPI_INHIBITION_ZONE                                      8           //抑制区间%，设置范围5-10，默认7,即（7*10）%=70% ，连水时加大该
             -参数,对讲机设置小
  57          #define         SOCAPI_MAX_KEY_MUTIPLE                                          300             //多少次干扰更新基线，默认300*5=1500
  58          #define         SOCAPI_MAX_KEY_NUM_INVALID                                      3               //强制更新基线按键限制个数，默认3
  59          /****************************************/
  60          
  61          #define         AppType                                         0
  62          #define         IsDoubleKey                                             1
  63          #define         AirSeparationDistance               2
  64          #define         CONFIRMTOUCHCNT                 3
  65          #define         INIT_AUTO_UPDATE_TIME               4
  66          #define         SET_KEY_CONTI_TIME              5  
  67          #define         SET_SYNC_UPDATE                                 6
  68          #define         SET_UPDATE_SPEED                                7       
  69          #define         AUTO_UPDATE_TIME                    8
  70          #define         FilteredKValue                                  9
  71          #define         SET_ANTIJAM                                     10
  72          #define         BAUD                                    11
  73          #define         DwellTime                                       12
  74          #define         SaveTime                                            13
  75          #define         NOISE                           16
  76          
  77          #define         SET_TOUCH_FREQ                                  0
  78          #define         SET_RESOLUTION                                  1
  79          #define         SET_GAIN_CFG                                    2
  80          #define         SCANTIME                                                3
  81          #define         SET_ICHA                                                4
  82          #define         FINGER_THRESHOLD_H                          6
  83          #define         FINGER_THRESHOLD_L                          7
  84          
  85          //**********************************************************************************    
  86          //                                                              函数接口调用部分                                                                  //
  87          //**********************************************************************************
  88          /**************************************************
  89          *函数名称：unsigned int SetOneKeyPushResetTime(void) 
  90          *函数功能：按键最长的输出时间
  91          *入口参数：void
  92          *出口参数：unsigned int SOCAPI_SET_KEY_CONTI_TIME
  93          *备注    ：这个返回值的设置， 是根据有多长时间启动TouchKeyRestart（）一次
  94          例如10ms 启动一次， 那SOCAPI_SET_KEY_CONTI_TIME*10ms，超过时间后此按键无效。
  95          **************************************************/
  96          unsigned int SetOneKeyPushResetTime(void)   
  97          {         
  98   1              return  TKCFG[SET_KEY_CONTI_TIME];
  99   1      }
 100          /**************************************************
 101          *函数名称：unsignedint  GetBaselineUpdateThreshold(void)
 102          *函数功能：更新速度 
 103          *入口参数：void
 104          *出口参数：unsigned  int 
 105          *备注    ：
 106          **************************************************/
 107          unsigned int  GetBaselineUpdateThreshold(void)
 108          {
 109   1              return TKCFG[SET_UPDATE_SPEED]; 
 110   1      }
 111          
 112          /**************************************************
 113          *函数名称：unsigned char GetInitAutoUpdateTime(void)
 114          *函数功能：初始化自动校准次数
 115          *入口参数：void
C51 COMPILER V9.00   S_TOUCHKEYCFG                                                         07/17/2021 13:56:29 PAGE 3   

 116          *出口参数：unsigned  char 
 117          *备注    ：
 118          **************************************************/
 119          unsigned char GetInitAutoUpdateTime(void)
 120          {
 121   1              return  TKCFG[INIT_AUTO_UPDATE_TIME];
 122   1      }
 123          /**************************************************
 124          *函数名称：unsigned char GetCsFunction(void)
 125          *函数功能：进行CS 测试
 126          *入口参数：void
 127          *出口参数：char SOCAPI_SET_CS_FUNCTION
 128          *备注    ：
 129          **************************************************/
 130          unsigned char GetCsFunction(void)
 131          {
 132   1              return SOCAPI_SET_CS_FUNCTION; 
 133   1      }
 134          /**************************************************
 135          *函数名称：int  GetCurrFingerValue(unsigned char i)
 136          *函数功能：获取当前的finger 值
 137          *入口参数：unsigned char
 138          *出口参数：int 
 139          *备注    ：
 140          **************************************************/
 141          unsigned int   GetCurrFingerValue(unsigned char i)
 142          { 
 143   1              return  TKChannelCfg[i][FINGER_THRESHOLD_H]*256+TKChannelCfg[i][FINGER_THRESHOLD_L] ;
 144   1      }
 145          
 146          /**************************************************
 147          *函数名称：unsigned char  GetScanTimeValue(unsigned char i)
 148          *函数功能：获取当前通道的扫描时间
 149          *入口参数：unsigned char
 150          *出口参数：unsigned char 
 151          *备注    ：
 152          **************************************************/
 153          unsigned char  GetScanTimeValue(unsigned char i)
 154          { 
 155   1              return TKChannelCfg[i][SCANTIME];
 156   1      }
 157          /**************************************************
 158          *函数名称：unsigned char IsDoubleKeyOrSlideKey(void)
 159          *函数功能：检测是否是弹簧滑条或者双键
 160          *入口参数：void
 161          *出口参数：unsigned char 
 162          *备注    ：
 163          **************************************************/
 164          unsigned char IsDoubleKeyOrSlideKey(void)
 165          {
 166   1          return TKCFG[IsDoubleKey];
 167   1      }
 168          /**************************************************
 169          *函数名称：unsigned char  GetBaseLineAdjustValue(unsigned char i)
 170          *函数功能：获取当前通道的基线调整
 171          j
 172          *入口参数：unsigned char
 173          *出口参数：unsigned char 
 174          *备注    ：
 175          **************************************************/
 176          unsigned char  GetBaseLineAdjustValue(unsigned char i)
 177          {       
C51 COMPILER V9.00   S_TOUCHKEYCFG                                                         07/17/2021 13:56:29 PAGE 4   

 178   1           return BaseLineAdjusttmp[i]; 
 179   1      }
 180          /**************************************************
 181          *函数名称：unsigned char GetUpConfirmCnt(void)
 182          *函数功能：检测按键弹起次数
 183          *入口参数：void
 184          *出口参数：返回按键弹起确认次数 
 185          *备注    ：
 186          **************************************************/
 187          unsigned char GetUpConfirmCnt(void)
 188          {
 189   1              return ConfirmTouchCnt>>1;
 190   1      }
 191          /**************************************************
 192          *函数名称：unsigned char GetTKYzCnt(void)
 193          *函数功能：获取按键抑制确认次数
 194          *入口参数：void
 195          *出口参数：返回抑制次数 
 196          *备注    ：
 197          **************************************************/
 198          
 199          unsigned char GetTKYzCnt(void)
 200          {
 201   1              return (ConfirmTouchCnt/3);
 202   1      }
 203          
 204          /**************************************************
 205          *函数名称：int GetTKYzThreshold(unsigned char i)
 206          *函数功能：获取按键抑制区间
 207          *入口参数：unsigned char i
 208          *出口参数：返回抑制区间
 209          *备注    ：
 210          **************************************************/
 211          unsigned int GetTKYzThreshold(unsigned char i)
 212          {       
 213   1              unsigned int SetFingerThresholdtmp; 
 214   1              
 215   1              SetFingerThresholdtmp = GetCurrFingerValue(i); 
 216   1          SetFingerThresholdtmp = SetFingerThresholdtmp*SOCAPI_INHIBITION_ZONE/10;
 217   1      
 218   1              return SetFingerThresholdtmp;
 219   1      }
 220          /**************************************************
 221          *函数名称：void CurrentSensorChoose(void)
 222          *函数功能：当前通道选择
 223          *入口参数：void
 224          *出口参数：void
 225          *备注    ：
 226          **************************************************/
 227          void CurrentSensorChoose(void)
 228          {
 229   1              unsigned char   i = 0;
 230   1              unsigned char   Ctk_Channel_mark = 0;
 231   1              unsigned long int       CurrentSensorKey = 0 ; 
 232   1              
 233   1              CurrentSensorKey = SOCAPI_SET_TOUCHKEY_CHANNEL; 
 234   1                      
 235   1              for(i=0;i<23;i++)
 236   1              {
 237   2                      CurrentSensorKey=CurrentSensorKey>>1;
 238   2                      if(TK_CY)
 239   2                      {
C51 COMPILER V9.00   S_TOUCHKEYCFG                                                         07/17/2021 13:56:29 PAGE 5   

 240   3                              CurrentChannel[Ctk_Channel_mark] = i;                                           //选择触摸当前的通道
 241   3                              Ctk_Channel_mark++;
 242   3                              if(Ctk_Channel_mark >= SOCAPI_SET_TOUCHKEY_TOTAL)
 243   3                                      break;
 244   3                      }               
 245   2              }
 246   1              CurrentChannelMax = Ctk_Channel_mark;                                                   //当前选择的按键数 
 247   1      }
 248          
 249          /**************************************************
 250          *函数名称：unsigned char  GetCfgMsg(unsigned char i)
 251          *函数功能：获取Touch KEY 配置信息
 252          *入口参数：void
 253          *出口参数：int 
 254          *备注    ：
 255          **************************************************/
 256          unsigned char  GetCfgMsg(unsigned char i)
 257          {
 258   1              switch(i)
 259   1              { 
 260   2                       case 0:  return TKChannelCfg[0][SET_TOUCH_FREQ];
 261   2                       case 1:  return TKChannelCfg[0][SET_RESOLUTION];
 262   2                       case 2:  return TKChannelCfg[0][SET_GAIN_CFG];
 263   2                       case 3:  return TKChannelCfg[0][SET_GAIN_CFG];
 264   2                       case 4:  return TKCFG[SET_ANTIJAM];
 265   2                       default:return 0;              
 266   2              }
 267   1      }
 268          
 269          /**************************************************
 270          *函数名称：void CurrentSensorChoose(void)
 271          *函数功能：初始化TK寄存器
 272          *入口参数：void
 273          *出口参数：void
 274          *备注    ：
 275          **************************************************/
 276          void TouchKeyCFGInit(void)
 277          {
 278   1              unsigned char   i;
 279   1              ConfirmTouchCnt = TKCFG[CONFIRMTOUCHCNT];
 280   1              SetNoiseThreshold = TKCFG[NOISE];
 281   1              CurrentSensorChoose(); 
 282   1               for(i=0;i<CurrentChannelMax;i++)
 283   1              {
 284   2                BaseLineAdjusttmp[i] =TKChannelCfg[i][SET_ICHA];;     
 285   2              } 
 286   1              UpdateBaseLNum = 0; 
 287   1      }
 288          
 289          /**************************************************
 290          *函数名称：unsigned int TouchKeyScan(void)
 291          *函数功能：检测按键接口
 292          *入口参数：void
 293          *出口参数：按键通道， 返回的是一个int , 通道数
 294          *备注    ：1,  调用触控库检测函数SensorKeyFlag()
 295                             2,  分析得出16个通道，哪个通道有按下，按下bit 位设置为1，否则为0
 296                             3,  检测是否需要立即更新baseline:  大于MAX_KEY_RESET_BASELINE 个按键按下时立即更新baseline
 297                             4,  双键或者单键按下时， 时间大于SetOneKeyPushResetTime()结果时更新baseline 
 298          **************************************************/
 299          unsigned long int TouchKeyScan(void)
 300          {
 301   1              unsigned char t;
C51 COMPILER V9.00   S_TOUCHKEYCFG                                                         07/17/2021 13:56:29 PAGE 6   

 302   1          unsigned char MultipleCnt = 0;//按键计数
 303   1              unsigned long int Keyvalue = 0; 
 304   1              unsigned long int KeyData = 0;  
 305   1              
 306   1              if(GetIsNeedUpdateBaseline() == 0)                              //检测是否需要更新baseline 
 307   1              {
 308   2                      Keyvalue = SensorKeyFlag();                                     //Sensor判断, 这里如果bMultiple = 1 表示中间有干扰       //分析按键，得出标准
             -的16通道bit 位                                                                           
 309   2                      for(t=0;t<CurrentChannelMax;t++)
 310   2                      {
 311   3                              Keyvalue = Keyvalue>>1;
 312   3                              if(TK_CY)
 313   3                              {
 314   4                                      KeyData |= ((unsigned long int)0x01 << (CurrentChannel[t]));              
 315   4                                      MultipleCnt++;                                                  
 316   4                              }
 317   3                      }                
 318   2                      if(MultipleCnt >= 2)                                                                            //进入多按键处理
 319   2                      {                       
 320   3                              bMultiple = 1;                  
 321   3                              if(MultipleCnt >= SOCAPI_MAX_KEY_NUM_INVALID)
 322   3                              {
 323   4                                      SetNeedUpdateBaseline();                                                        // 立即更新baseline ,例如亚克力板盖上去
 324   4                              }
 325   3                              else
 326   3                              {                                       
 327   4                                      if(IsDoubleKeyOrSlideKey())
 328   4                                      {
 329   5                                              bMultiple = 0;
 330   5                                      }                                
 331   4                              }                       
 332   3                      }                       
 333   2      
 334   2                      if(bMultiple == 0)                                                      //进入按键判断
 335   2                      {               
 336   3                              if(KeyData != 0x0)                                          //单个按键达到多长时间就update baseline ,松手检测
 337   3                              {                       
 338   4                                      UpdateBaseLNum++; 
 339   4                              }
 340   3                              else    
 341   3                              {
 342   4                                      UpdateBaseLNum = 0;     
 343   4                              } 
 344   3                      }       
 345   2                      else
 346   2                      {   
 347   3                          //考虑基线更新              
 348   3                              MultipleLNum++; 
 349   3                              KeyData = 0x00;
 350   3                      }
 351   2      
 352   2                      if(UpdateBaseLNum > SetOneKeyPushResetTime())     //按键超出最长输出时间更新基线
 353   2                      {
 354   3                              SetNeedUpdateBaseline(); 
 355   3                              UpdateBaseLNum = 0;
 356   3                      }
 357   2                                      
 358   2                      if(MultipleLNum >SOCAPI_MAX_KEY_MUTIPLE)                  //干扰计数大于最大计数更新基线
 359   2                      {
 360   3                              SetNeedUpdateBaseline(); 
 361   3                              MultipleDealTpye = 1; 
 362   3                              MultipleLNum = 0;
C51 COMPILER V9.00   S_TOUCHKEYCFG                                                         07/17/2021 13:56:29 PAGE 7   

 363   3                      }  
 364   2              }                       
 365   1              else
 366   1              {
 367   2                      MultipleDeal(TKCFG[AUTO_UPDATE_TIME]);                                                                          //基线复位处理
 368   2              }  
 369   1              
 370   1              return KeyData;
 371   1      }
 372          
 373          /**************************************************
 374          *函数名称：void CTK_ISR(void) interrupt 11
 375          *函数功能：触摸中断服务函数
 376          *入口参数：void
 377          *出口参数：void
 378          *备注    ：
 379          **************************************************/
 380          void CTK_ISR(void) interrupt    11
 381          {
 382   1         TouchKey_Service();
 383   1      }
 384          
 385          
 386          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    695    ----
   CONSTANT SIZE    =     74    ----
   XDATA SIZE       =     68    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
